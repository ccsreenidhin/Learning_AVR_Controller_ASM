
password.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000270  000002e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000270  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000020  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000001b  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000f3  00000000  00000000  0000036f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000007f  00000000  00000000  00000462  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000156  00000000  00000000  000004e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  00000638  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000060  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000004b  00000000  00000000  000006b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e7       	ldi	r30, 0x70	; 112
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 35       	cpi	r26, 0x50	; 80
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 36 01 	jmp	0x26c	; 0x26c <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:
#include"avr\io.h"
#include"string.h"
void main()
{
  be:	8f 92       	push	r8
  c0:	9f 92       	push	r9
  c2:	af 92       	push	r10
  c4:	bf 92       	push	r11
  c6:	cf 92       	push	r12
  c8:	df 92       	push	r13
  ca:	ef 92       	push	r14
  cc:	ff 92       	push	r15
  ce:	0f 93       	push	r16
  d0:	1f 93       	push	r17
  d2:	df 93       	push	r29
  d4:	cf 93       	push	r28
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	cf 55       	subi	r28, 0x5F	; 95
  dc:	d0 40       	sbci	r29, 0x00	; 0
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	f8 94       	cli
  e2:	de bf       	out	0x3e, r29	; 62
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	cd bf       	out	0x3d, r28	; 61
int i;
char g[15],x;
char a[20]={"abcd"};
  e8:	de 01       	movw	r26, r28
  ea:	50 96       	adiw	r26, 0x10	; 16
  ec:	e0 e0       	ldi	r30, 0x00	; 0
  ee:	f1 e0       	ldi	r31, 0x01	; 1
  f0:	85 e0       	ldi	r24, 0x05	; 5
  f2:	01 90       	ld	r0, Z+
  f4:	0d 92       	st	X+, r0
  f6:	81 50       	subi	r24, 0x01	; 1
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x34>
  fa:	fe 01       	movw	r30, r28
  fc:	75 96       	adiw	r30, 0x15	; 21
  fe:	8f e0       	ldi	r24, 0x0F	; 15
 100:	df 01       	movw	r26, r30
 102:	1d 92       	st	X+, r1
 104:	8a 95       	dec	r24
 106:	e9 f7       	brne	.-6      	; 0x102 <main+0x44>
char b[20]={"enter pass"};
 108:	de 01       	movw	r26, r28
 10a:	94 96       	adiw	r26, 0x24	; 36
 10c:	e4 e1       	ldi	r30, 0x14	; 20
 10e:	f1 e0       	ldi	r31, 0x01	; 1
 110:	8b e0       	ldi	r24, 0x0B	; 11
 112:	01 90       	ld	r0, Z+
 114:	0d 92       	st	X+, r0
 116:	81 50       	subi	r24, 0x01	; 1
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x54>
 11a:	fe 01       	movw	r30, r28
 11c:	bf 96       	adiw	r30, 0x2f	; 47
 11e:	89 e0       	ldi	r24, 0x09	; 9
 120:	df 01       	movw	r26, r30
 122:	1d 92       	st	X+, r1
 124:	8a 95       	dec	r24
 126:	e9 f7       	brne	.-6      	; 0x122 <main+0x64>
char c[20]={"granded"};
 128:	de 01       	movw	r26, r28
 12a:	d8 96       	adiw	r26, 0x38	; 56
 12c:	e8 e2       	ldi	r30, 0x28	; 40
 12e:	f1 e0       	ldi	r31, 0x01	; 1
 130:	88 e0       	ldi	r24, 0x08	; 8
 132:	01 90       	ld	r0, Z+
 134:	0d 92       	st	X+, r0
 136:	81 50       	subi	r24, 0x01	; 1
 138:	e1 f7       	brne	.-8      	; 0x132 <main+0x74>
 13a:	fe 01       	movw	r30, r28
 13c:	e0 5c       	subi	r30, 0xC0	; 192
 13e:	ff 4f       	sbci	r31, 0xFF	; 255
 140:	8c e0       	ldi	r24, 0x0C	; 12
 142:	df 01       	movw	r26, r30
 144:	1d 92       	st	X+, r1
 146:	8a 95       	dec	r24
 148:	e9 f7       	brne	.-6      	; 0x144 <main+0x86>
char d[20]={"denied"};
 14a:	fe 01       	movw	r30, r28
 14c:	e4 5b       	subi	r30, 0xB4	; 180
 14e:	ff 4f       	sbci	r31, 0xFF	; 255
 150:	9f 01       	movw	r18, r30
 152:	4c e3       	ldi	r20, 0x3C	; 60
 154:	51 e0       	ldi	r21, 0x01	; 1
 156:	87 e0       	ldi	r24, 0x07	; 7
 158:	da 01       	movw	r26, r20
 15a:	0d 90       	ld	r0, X+
 15c:	ad 01       	movw	r20, r26
 15e:	d9 01       	movw	r26, r18
 160:	0d 92       	st	X+, r0
 162:	9d 01       	movw	r18, r26
 164:	81 50       	subi	r24, 0x01	; 1
 166:	c1 f7       	brne	.-16     	; 0x158 <main+0x9a>
 168:	37 96       	adiw	r30, 0x07	; 7
 16a:	8d e0       	ldi	r24, 0x0D	; 13
 16c:	df 01       	movw	r26, r30
 16e:	1d 92       	st	X+, r1
 170:	8a 95       	dec	r24
 172:	e9 f7       	brne	.-6      	; 0x16e <main+0xb0>
UCSR0B=0x18;
 174:	88 e1       	ldi	r24, 0x18	; 24
 176:	8a b9       	out	0x0a, r24	; 10
UBRR0L=0X19;
 178:	89 e1       	ldi	r24, 0x19	; 25
 17a:	89 b9       	out	0x09, r24	; 9
 17c:	20 e0       	ldi	r18, 0x00	; 0
 17e:	30 e0       	ldi	r19, 0x00	; 0

while(1)
{
for (i=0;i<15;i++)
{
UDR0=b[i];
 180:	54 e2       	ldi	r21, 0x24	; 36
 182:	85 2e       	mov	r8, r21
 184:	91 2c       	mov	r9, r1
 186:	8c 0e       	add	r8, r28
 188:	9d 1e       	adc	r9, r29
 18a:	8e 01       	movw	r16, r28
 18c:	0f 5f       	subi	r16, 0xFF	; 255
 18e:	1f 4f       	sbci	r17, 0xFF	; 255
  g[i]='\0';
  break;
  }
}

if(strcmp(g,a)==0)
 190:	40 e1       	ldi	r20, 0x10	; 16
 192:	a4 2e       	mov	r10, r20
 194:	b1 2c       	mov	r11, r1
 196:	ac 0e       	add	r10, r28
 198:	bd 1e       	adc	r11, r29
{

 for (i=0;i<15;i++)
 19a:	9c e4       	ldi	r25, 0x4C	; 76
 19c:	c9 2e       	mov	r12, r25
 19e:	d1 2c       	mov	r13, r1
 1a0:	cc 0e       	add	r12, r28
 1a2:	dd 1e       	adc	r13, r29
 }
 break;
}
else
{
  for (i=0;i<15;i++)
 1a4:	8f e0       	ldi	r24, 0x0F	; 15
 1a6:	e8 2e       	mov	r14, r24
 1a8:	f1 2c       	mov	r15, r1
 1aa:	ec 0c       	add	r14, r12
 1ac:	fd 1c       	adc	r15, r13
 1ae:	0a c0       	rjmp	.+20     	; 0x1c4 <main+0x106>

while(1)
{
for (i=0;i<15;i++)
{
UDR0=b[i];
 1b0:	f4 01       	movw	r30, r8
 1b2:	e2 0f       	add	r30, r18
 1b4:	f3 1f       	adc	r31, r19
 1b6:	80 81       	ld	r24, Z
 1b8:	8c b9       	out	0x0c, r24	; 12
while(!(UCSR0A&0X40));
 1ba:	5e 9b       	sbis	0x0b, 6	; 11
 1bc:	fe cf       	rjmp	.-4      	; 0x1ba <main+0xfc>
UCSR0A|=0X40;
 1be:	5e 9a       	sbi	0x0b, 6	; 11
UCSR0B=0x18;
UBRR0L=0X19;

while(1)
{
for (i=0;i<15;i++)
 1c0:	2f 5f       	subi	r18, 0xFF	; 255
 1c2:	3f 4f       	sbci	r19, 0xFF	; 255
 1c4:	2f 30       	cpi	r18, 0x0F	; 15
 1c6:	31 05       	cpc	r19, r1
 1c8:	9c f3       	brlt	.-26     	; 0x1b0 <main+0xf2>
 1ca:	a0 e0       	ldi	r26, 0x00	; 0
 1cc:	b0 e0       	ldi	r27, 0x00	; 0
 1ce:	01 c0       	rjmp	.+2      	; 0x1d2 <main+0x114>
}
i=0;
while(1)
{
while(!(UCSR0A&0x80))
UCSR0A|=0x80;
 1d0:	5f 9a       	sbi	0x0b, 7	; 11
UCSR0A|=0X40;
}
i=0;
while(1)
{
while(!(UCSR0A&0x80))
 1d2:	5f 9b       	sbis	0x0b, 7	; 11
 1d4:	fd cf       	rjmp	.-6      	; 0x1d0 <main+0x112>
UCSR0A|=0x80;
x=UDR0;
 1d6:	8c b1       	in	r24, 0x0c	; 12
if(x!=0x0d)
 1d8:	8d 30       	cpi	r24, 0x0D	; 13
 1da:	31 f0       	breq	.+12     	; 0x1e8 <main+0x12a>
 {
  g[i]=x;
 1dc:	f8 01       	movw	r30, r16
 1de:	ea 0f       	add	r30, r26
 1e0:	fb 1f       	adc	r31, r27
 1e2:	80 83       	st	Z, r24
  i++;
 1e4:	11 96       	adiw	r26, 0x01	; 1
 1e6:	f5 cf       	rjmp	.-22     	; 0x1d2 <main+0x114>
 }
else
  { 
  g[i]='\0';
 1e8:	a0 0f       	add	r26, r16
 1ea:	b1 1f       	adc	r27, r17
 1ec:	1c 92       	st	X, r1
  break;
  }
}

if(strcmp(g,a)==0)
 1ee:	c8 01       	movw	r24, r16
 1f0:	b5 01       	movw	r22, r10
 1f2:	0e 94 2d 01 	call	0x25a	; 0x25a <strcmp>
 1f6:	00 97       	sbiw	r24, 0x00	; 0
 1f8:	79 f4       	brne	.+30     	; 0x218 <main+0x15a>
 1fa:	fe 01       	movw	r30, r28
 1fc:	f8 96       	adiw	r30, 0x38	; 56
{

 for (i=0;i<15;i++)
 1fe:	9f 01       	movw	r18, r30
 200:	21 5f       	subi	r18, 0xF1	; 241
 202:	3f 4f       	sbci	r19, 0xFF	; 255
 {
 UDR0=c[i];
 204:	80 81       	ld	r24, Z
 206:	8c b9       	out	0x0c, r24	; 12
 while(!(UCSR0A&0X40));
 208:	5e 9b       	sbis	0x0b, 6	; 11
 20a:	fe cf       	rjmp	.-4      	; 0x208 <main+0x14a>
 UCSR0A|=0X40;
 20c:	5e 9a       	sbi	0x0b, 6	; 11
 20e:	31 96       	adiw	r30, 0x01	; 1
}

if(strcmp(g,a)==0)
{

 for (i=0;i<15;i++)
 210:	e2 17       	cp	r30, r18
 212:	f3 07       	cpc	r31, r19
 214:	b9 f7       	brne	.-18     	; 0x204 <main+0x146>
 216:	0d c0       	rjmp	.+26     	; 0x232 <main+0x174>
 218:	f6 01       	movw	r30, r12
}
else
{
  for (i=0;i<15;i++)
 {
 UDR0=d[i];
 21a:	80 81       	ld	r24, Z
 21c:	8c b9       	out	0x0c, r24	; 12
 while(!(UCSR0A&0X40));
 21e:	5e 9b       	sbis	0x0b, 6	; 11
 220:	fe cf       	rjmp	.-4      	; 0x21e <main+0x160>
 UCSR0A|=0X40;
 222:	5e 9a       	sbi	0x0b, 6	; 11
 224:	31 96       	adiw	r30, 0x01	; 1
 }
 break;
}
else
{
  for (i=0;i<15;i++)
 226:	ee 15       	cp	r30, r14
 228:	ff 05       	cpc	r31, r15
 22a:	b9 f7       	brne	.-18     	; 0x21a <main+0x15c>
 22c:	20 e0       	ldi	r18, 0x00	; 0
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	c9 cf       	rjmp	.-110    	; 0x1c4 <main+0x106>
 UCSR0A|=0X40;
 }
}
}

}
 232:	c1 5a       	subi	r28, 0xA1	; 161
 234:	df 4f       	sbci	r29, 0xFF	; 255
 236:	0f b6       	in	r0, 0x3f	; 63
 238:	f8 94       	cli
 23a:	de bf       	out	0x3e, r29	; 62
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	cd bf       	out	0x3d, r28	; 61
 240:	cf 91       	pop	r28
 242:	df 91       	pop	r29
 244:	1f 91       	pop	r17
 246:	0f 91       	pop	r16
 248:	ff 90       	pop	r15
 24a:	ef 90       	pop	r14
 24c:	df 90       	pop	r13
 24e:	cf 90       	pop	r12
 250:	bf 90       	pop	r11
 252:	af 90       	pop	r10
 254:	9f 90       	pop	r9
 256:	8f 90       	pop	r8
 258:	08 95       	ret

0000025a <strcmp>:
 25a:	fb 01       	movw	r30, r22
 25c:	dc 01       	movw	r26, r24
 25e:	8d 91       	ld	r24, X+
 260:	01 90       	ld	r0, Z+
 262:	80 19       	sub	r24, r0
 264:	01 10       	cpse	r0, r1
 266:	d9 f3       	breq	.-10     	; 0x25e <strcmp+0x4>
 268:	99 0b       	sbc	r25, r25
 26a:	08 95       	ret

0000026c <_exit>:
 26c:	f8 94       	cli

0000026e <__stop_program>:
 26e:	ff cf       	rjmp	.-2      	; 0x26e <__stop_program>
